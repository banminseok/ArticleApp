@page "/Ideas"
@page "/Ideas/Index"

@inject IIdeaRepository _repository

<h3>Ideas</h3>



<p>
    <a href="/Candidates/Create">Create New</a>
</p>

@if (ideas is null)
{
    <div>Loading...</div>
}
else
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    Note
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var m in ideas)
            {
                <tr>
                    <td>
                        @m.Id
                    </td>
                    <td>
                        @m.Note
                    </td>
                    <td>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<input type="button" value="글쓰기" @onclick="btnCreate_Click" class="btn btn-primary"/>

﻿@if (isShow)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog" id="myModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">입력</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Hide">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body m-1">
                    <EditForm Model="idea" OnValidSubmit="CreateOrEditClick">
                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <ValidationSummary></ValidationSummary>
                        <div class="form-group">
                            <label for="txtName">Idea</label>
                            <InputText id="txtName" class="form-control" placeholder="Enter Title"
                            @bind-Value="@idea.Note"></InputText>
                            <ValidationMessage For="@(() => idea.Note)" class="form-text text-muted"></ValidationMessage>
                        </div>                        
                        <div class="form-group m-2">
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <button type="button" class="btn btn-secondary" @onclick="@(()=>{isShow=false;})">Cancel</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}
@code {
    private bool isShow = false;
    private List<Idea> ideas = new List<Idea>();
    private Idea idea;

    protected override async Task OnInitializedAsync()
    {
        ideas = await _repository.GetIdeasAsync();
    }

    protected void btnCreate_Click()
    {
        idea = new Idea();
        isShow = true;
    }

    protected async Task CreateOrEditClick()
    {
        await _repository.AddIdeaAsync(idea);
        ideas = await _repository.GetIdeasAsync();
        isShow = false;
        StateHasChanged();
    }

    protected void Hide()
    {
        isShow = false;
    }
}
